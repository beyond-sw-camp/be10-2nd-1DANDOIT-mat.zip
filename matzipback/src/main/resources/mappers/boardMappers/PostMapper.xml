<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.matzip.matzipback.board.query.mapper.PostMapper">

    <select id="searchPosts" resultType="com.matzip.matzipback.board.query.dto.PostDTO">
        SELECT
               b.board_category_name
             , a.post_seq
             , a.post_title
             , a.post_user_seq
             , c.user_nickname
             , a.post_created_time
             , a.post_updated_time
          FROM post a
          LEFT JOIN board_category b USING (board_category_seq)
          LEFT JOIN users c ON (a.post_user_seq = c.user_seq)
         WHERE post_status = 'active'
        <if test="postTitle != null">
            AND a.post_title LIKE CONCAT('%', #{postTitle}, '%')
        </if>
        <if test="userNickname != null">
            AND c.user_nickname LIKE CONCAT('%', #{userNickname}, '%')
        </if>
        ORDER BY a.post_seq DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countPostsBySearch" resultType="long">
        SELECT COUNT(*)
          FROM post a
        <if test="userNickname != null">
            LEFT JOIN users c ON (a.post_user_seq = c.user_seq)
        </if>
         WHERE a.post_status = 'active'
        <if test="postTitle != null">
            AND a.post_title LIKE CONCAT('%', #{postTitle}, '%')
        </if>
        <if test="userNickname != null">
            AND c.user_nickname LIKE CONCAT('%', #{userNickname}, '%')
        </if>
    </select>

    <select id="getPostsByCategory" resultType="com.matzip.matzipback.board.query.dto.PostDTO">
        SELECT
               b.board_category_name
             , a.post_seq
             , a.post_title
             , a.post_user_seq
             , c.user_nickname
             , a.post_created_time
             , a.post_updated_time
             <!-- , IFNULL(a.post_updated_time, a.post_created_time) as postTime -->
          FROM post a
          LEFT JOIN board_category b USING (board_category_seq)
          LEFT JOIN users c ON (a.post_user_seq = c.user_seq)
         WHERE post_status = 'active'
            <if test="boardSeq != null">
                AND b.board_category_seq = #{boardSeq}
            </if>
         ORDER BY a.post_seq DESC
         LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countPostsByCategory" resultType="long">
        SELECT COUNT(*)
          FROM post a
        <if test="boardSeq != null">
            LEFT JOIN board_category b USING (board_category_seq)
        </if>
         WHERE a.post_status = 'active'
        <if test="postTitle != null">
            AND b.board_category_seq = #{boardSeq}
        </if>
    </select>

    <select id="getPostDetail" resultType="com.matzip.matzipback.board.query.dto.PostDTO">
        SELECT
                b.board_category_name
              , a.post_title
              , a.post_content
              , a.post_user_seq
              , c.user_nickname
              , a.post_created_time
              , a.post_updated_time
        <!-- , IFNULL(a.post_updated_time, a.post_created_time) as postTime -->
        FROM post a
        LEFT JOIN board_category b USING (board_category_seq)
        LEFT JOIN users c ON (a.post_user_seq = c.user_seq)
        WHERE a.post_seq = #{postSeq}
          AND a.post_status = 'active'
    </select>

    <select id="getPostTags" resultType="com.matzip.matzipback.board.query.dto.PostTagDTO">
        SELECT
                a.post_tag_seq
              , b.tag_name
        FROM post_tag a
        LEFT JOIN tags b USING(tag_seq)
        WHERE a.post_seq = #{postSeq}
    </select>

    <select id="getPostList" resultType="com.matzip.matzipback.board.query.dto.ListDTO">
        SELECT
                a.list_seq
              , a.list_title
              , a.list_content
          FROM lists a
          JOIN post b USING (list_seq)
         WHERE b.post_seq = #{postSeq}
    </select>

    <select id="getPostRestaurant" resultType="com.matzip.matzipback.board.query.dto.RestaurantDTO">
        SELECT
                a.restaurant_seq
              , a.restaurant_title
              , a.restaurant_address
              , a.restaurant_phone
              , a.restaurant_star
          FROM restaurant a
          JOIN post b USING (restaurant_seq)
         WHERE b.post_seq = #{postSeq}

    </select>

    <select id="getLikeCount" resultType="Long">
        SELECT
                COUNT(*)
          FROM `like`
         WHERE post_seq = #{postSeq}
    </select>

    <select id="getPostComment" resultType="com.matzip.matzipback.board.query.dto.PostCommentDTO">
        SELECT
                a.post_comment_seq
              , a.post_comment_user_seq
              , c.user_nickname
              , a.post_comment_content
              , a.post_comment_created_time
              , a.post_comment_updated_time
          FROM post_comment a
         RIGHT JOIN post b USING (post_seq)
          LEFT JOIN users c ON (a.post_comment_user_seq = c.user_seq)
         WHERE post_seq = #{postSeq}
         ORDER BY a.post_comment_seq
    </select>

    <select id="getTop10Tags" resultType="String">
        SELECT recent_posts.tag_name
          FROM (SELECT a.post_seq, a.post_title, a.post_status, a.post_created_time, b.post_tag_seq, c.tag_name
                  FROM post a
                  JOIN post_tag b USING (post_seq)
                  JOIN tags c ON (b.tag_seq = c.tag_seq)
                 WHERE post_status = 'active'
                 ORDER BY post_created_time DESC
                 LIMIT 200) AS recent_posts
         GROUP BY recent_posts.tag_name
         ORDER BY COUNT(recent_posts.tag_name) DESC
         LIMIT 10;
    </select>

    <select id="getPopularTag" resultType="String">
        SELECT
               a.tag_name
          FROM tags a
          JOIN post_tag b ON (a.tag_seq = b.tag_seq)
          JOIN post c ON (b.post_seq = c.post_seq)
         WHERE c.board_category_seq = #{boardSeq}
           AND c.post_status = 'active'
         GROUP BY tag_name
         ORDER BY COUNT(a.tag_name) DESC
         LIMIT 10;
    </select>

    <select id="getTagKeywords" resultType="String">
        SELECT
               a.tag_name
          FROM tags a
          JOIN post_tag b USING (tag_seq)
          JOIN post c ON (b.post_seq = c.post_seq)
         WHERE a.tag_name LIKE CONCAT('%', #{tag}, '%')
           AND c.post_status = 'active'
         GROUP BY tag_name
         ORDER BY COUNT(a.tag_name) DESC
         LIMIT 10;
    </select>

</mapper>
