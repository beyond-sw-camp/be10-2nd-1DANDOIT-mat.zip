<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matzip.matzipback.users.query.mapper.UsersInfoMapper">
    <resultMap id="UsersResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.UserInfoDTO">
        <id property="userSeq" column="user_seq"/>
        <result property = "userEmail" column = "user_email"/>
        <result property = "userNickname" column = "user_nickname"/>
        <result property = "socialYn" column = "user_social_yn"/>
        <result property = "socialSite" column = "user_social_site"/>
        <result property = "businessVerifiedYn" column = "business_verified_yn"/>
        <result property = "penaltyYn" column = "penalty_yn"/>
        <result property = "userStatus" column = "user_status"/>
        <result property = "userRegDate" column = "user_reg_date"/>
        <result property = "userDeleteDate" column = "user_delete_date"/>

        <!-- 패널티 정보 -->
        <association property="penalty" resultMap="PenaltyResultMap"/>
        <!-- 회원 활동 정보 -->
        <association property="activityInfo" resultMap="ActivityResultMap"/>
    </resultMap>

    <resultMap id="ActivityResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.UserActivityInfoDTO">
        <id property="userSeq" column="activity_user_seq"/>
        <result property="activeLevelSeq" column="active_level_seq"/>
        <result property="activeLevelName" column="active_level_name"/>
        <result property="activityPoint" column="activity_point"/>
        <result property="activeLevelStandard" column="active_level_standard"/>
        <result property="influencerYn" column="influencer_yn"/>
    </resultMap>

    <resultMap id="PenaltyResultMap" type="com.matzip.matzipback.report.query.dto.PenaltyDTO">
        <id property="penaltySeq" column="penalty_seq"/>
        <result property="userSeq" column="penalty_user_seq"/>
        <result property="startDate" column="penalty_start_date"/>
        <result property="endDate" column="penalty_end_date"/>
        <result property="penaltyType" column="penalty_type"/>
        <result property="penaltyReasonContent" column="penalty_reason_content"/>
    </resultMap>

<!--    <resultMap id="ResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.BusinessLicenseDTO">-->
<!--        <id property="businessSeq" column="business_seq"/>-->
<!--        <result property="userSeq" column="user_seq"/>-->
<!--        <result property="businessName" column="business_name"/>-->
<!--        <result property="businessNumber" column="business_number"/>-->
<!--        <result property="businessAddress" column="business_address"/>-->
<!--        <result property="verificationDate" column="business_verification_date"/>-->
<!--        <result property="businessStatus" column="business_verification_status"/>-->
<!--    </resultMap>-->

    <select id="getAllUserInfo" resultMap="UsersResultMap">
        SELECT u.user_seq
             , u.user_email
             , u.user_nickname
             , u.user_social_yn
             , u.user_social_site
             , u.business_verified_yn
             , CASE
            <![CDATA[
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN 'Y'
               ELSE 'N'
                END AS penalty_yn
             , CASE
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN p.penalty_start_date
               ELSE NULL
                END AS penalty_start_date
             , CASE
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN p.penalty_end_date
               ELSE NULL
             ]]>
                END AS penalty_end_date
             , u.user_status
             , u.user_reg_date
             , u.user_delete_date
             , ua.activity_point
             , al.active_level_name
             , al.active_level_standard
             , ua.influencer_yn
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        <where>
            <!-- 관리자 계정 제외 -->
            u.user_auth = 'user'
            <!-- 소셜회원 여부 필터링 -->
            <if test="socialYn != null and socialYn != ''">
                u.user_social_yn = #{socialYn}
                <!-- 소셜회원인 경우에는 socialSite 보이게 조건 추가 -->
                <if test="socialSite != null and socialSite != ''">
                    AND u.user_social_site = #{socialSite}
                </if>
            </if>
            <!-- 사업자 인증여부 필터링 -->
            <if test="businessVerifiedYn != null and businessVerifiedYn != ''">
                AND u.business_verified_yn = #{businessVerifiedYn}
            </if>
            <!-- 인기회원 여부 필터링 -->
            <if test="influencerYn != null and influencerYn != ''">
                AND u.influencer_yn = #{influencerYn}
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="orderBy == 'regDateDesc'">
                u.user_reg_date DESC, ua.activity_point DESC  <!-- 가입일 먼저 내림차순, 포인트 내림차순 -->
            </when>
            <when test="orderBy == 'regDateAsc'">
                u.user_reg_date ASC, ua.activity_point DESC  <!-- 가입일 먼저 오름차순, 포인트 내림차순 -->
            </when>
            <when test="orderBy == 'pointDesc'">
                ua.activity_point DESC, u.user_reg_date DESC  <!-- 포인트 먼저 내림차순, 가입일 내림차순 -->
            </when>
            <when test="orderBy == 'pointAsc'">
                ua.activity_point ASC, u.user_reg_date DESC  <!-- 포인트 먼저 오름차순, 가입일 내림차순 -->
            </when>
            <when test="orderBy == 'regDateAscPointAsc'">
                u.user_reg_date ASC, ua.activity_point Asc  <!-- 가입일 오름차순, 포인트 오름차순 -->
            </when>
            <when test="orderBy == 'regDateDescPointAsc'">
                u.user_reg_date DESC, ua.activity_point Asc  <!-- 가입일 내림차순, 포인트 오름차순 -->
            </when>
            <when test="orderBy == 'pointAscRegDateAsc'">
                ua.activity_point ASC, u.user_reg_date Asc   <!-- 포인트 오름차순, 가입일 오름차순 -->
            </when>
            <when test="orderBy == 'pointDescRegDateAsc'">
                ua.activity_point Desc, u.user_reg_date Asc   <!-- 포인트 내림차순, 가입일 오름차순 -->
            </when>
            <otherwise>
                u.user_reg_date DESC, ua.activity_point DESC  <!-- 기본값: 가입일 내림차순, 포인트 내림차순 -->
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}  <!-- 페이징을 위한 코드 -->
    </select>

    <select id="getTotalUserCount" resultType="long">
        SELECT COUNT(*)
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        <where>
            u.user_auth = 'user'
            <if test="socialYn != null and socialYn != ''">
                u.user_social_yn = #{socialYn}
                <if test="socialSite != null and socialSite != ''">
                    AND u.user_social_site = #{socialSite}
                </if>
            </if>
            <if test="businessVerifiedYn != null and businessVerifiedYn != ''">
                AND u.business_verified_yn = #{businessVerifiedYn}
            </if>
            <if test="influencerYn != null and influencerYn != ''">
                AND u.influencer_yn = #{influencerYn}
            </if>
        </where>
    </select>

</mapper>