<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matzip.matzipback.users.query.mapper.UsersInfoMapper">
    <resultMap id="UsersResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.UserInfoDTO">
        <id property="userSeq" column="user_seq"/>
        <result property = "userEmail" column = "user_email"/>
        <result property = "userNickname" column = "user_nickname"/>
        <result property = "socialYn" column = "user_social_yn"/>
        <result property = "socialSite" column = "user_social_site"/>
        <result property = "businessVerifiedYn" column = "business_verified_yn"/>
        <result property = "penaltyYn" column = "penalty_yn"/>
        <result property = "userStatus" column = "user_status"/>
        <result property = "userAuth" column = "user_auth"/>
        <result property = "userRegDate" column = "user_reg_date"/>
        <result property = "userDeleteDate" column = "user_delete_date"/>

        <!-- 패널티 정보 -->
        <association property="penalty" resultMap="PenaltyResultMap"/>
        <!-- 회원 활동 정보 -->
        <association property="activityInfo" resultMap="ActivityResultMap"/>
    </resultMap>

    <!-- 회원상세조회 : 관리자, 자신 -->
    <resultMap id="UsersDetailResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.UserDetailInfoDTO">
        <id property="userSeq" column="user_seq"/>
        <result property = "userEmail" column = "user_email"/>
        <result property = "userNickname" column = "user_nickname"/>
        <result property = "userName" column = "user_name"/>
        <result property = "userPhone" column = "user_phone"/>
        <result property = "socialYn" column = "user_social_yn"/>
        <result property = "socialSite" column = "user_social_site"/>
        <result property = "penaltyYn" column = "penalty_yn"/>
        <result property = "penaltyStartDate" column = "penalty_startDate"/>
        <result property = "penaltyEndDate" column = "penalty_end_date"/>
        <result property = "userStatus" column = "user_status"/>
        <result property = "userAuth" column = "user_auth"/>
        <result property = "userRegDate" column = "user_reg_date"/>
        <result property = "userDeleteDate" column = "user_delete_date"/>
        <result property = "listCount" column = "listCount"/>
        <result property = "reviewCount" column = "reviewCount"/>
        <result property = "businessVerifiedYn" column = "business_verified_yn"/>
        <result property = "followerCount" column = "followerCount"/>
        <result property = "followingCount" column = "followingCount"/>

        <!-- 사업자 정보 -->
        <association property="businessInfo" resultMap="BusinessResultMap"/>
        <!-- 회원 활동 정보 -->
        <association property="activityInfo" resultMap="ActivityResultMap"/>
    </resultMap>

    <resultMap id="ActivityResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.UserActivityInfoDTO">
        <id property="userSeq" column="activity_user_seq"/>
        <result property="activeLevelSeq" column="active_level_seq"/>
        <result property="activeLevelName" column="active_level_name"/>
        <result property="activityPoint" column="activity_point"/>
        <result property="activeLevelStandard" column="active_level_standard"/>
        <result property="influencerYn" column="influencer_yn"/>
    </resultMap>

    <resultMap id="PenaltyResultMap" type="com.matzip.matzipback.report.query.dto.PenaltyDTO">
        <id property="penaltySeq" column="penalty_seq"/>
        <result property="userSeq" column="penalty_user_seq"/>
        <result property="startDate" column="penalty_start_date"/>
        <result property="endDate" column="penalty_end_date"/>
        <result property="penaltyType" column="penalty_type"/>
        <result property="penaltyReasonContent" column="penalty_reason_content"/>
    </resultMap>

    <resultMap id="BusinessResultMap" type="com.matzip.matzipback.users.query.dto.userInfo.BusinessLicenseDTO">
        <id property="businessSeq" column="business_seq"/>
        <result property="userSeq" column="user_seq"/>
        <result property="businessName" column="business_name"/>
        <result property="businessNumber" column="business_number"/>
        <result property="businessAddress" column="business_address"/>
        <result property="verificationDate" column="business_verification_date"/>
        <result property="businessStatus" column="business_verification_status"/>
    </resultMap>

    <!-- 회원 전체조회 : 관리자 -->
    <select id="getAllUserInfo" resultMap="UsersResultMap">
        SELECT u.user_seq
             , u.user_email
             , u.user_nickname
             , u.user_social_yn
             , u.user_social_site
             , u.business_verified_yn
             , CASE
            <![CDATA[
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN 'Y'
               ELSE 'N'
                END AS penalty_yn
             , CASE
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN p.penalty_start_date
               ELSE NULL
                END AS penalty_start_date
             , CASE
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN p.penalty_end_date
               ELSE NULL
             ]]>
                END AS penalty_end_date
             , u.user_status
             , u.user_auth
             , u.user_reg_date
             , u.user_delete_date
             , ua.activity_point
             , al.active_level_name
             , al.active_level_standard
             , ua.influencer_yn
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        <where>
            <!-- 관리자 계정 제외 -->
            u.user_auth = 'user'

            <!-- 소셜회원 여부 필터링 -->
            <if test="socialYn != null and socialYn != ''">
                AND u.user_social_yn = #{socialYn}
                <!-- 소셜회원인 경우에는 socialSite 보이게 조건 추가 -->
                <if test="socialYn != null and socialYn != '' and socialYn == 'Y'">
                    AND u.user_social_site = #{socialSite}
                </if>
            </if>
            <!-- 사업자 인증여부 필터링 -->
            <if test="businessVerifiedYn != null and businessVerifiedYn != ''">
                AND u.business_verified_yn = #{businessVerifiedYn}
            </if>
            <!-- 인기회원 여부 필터링 -->
            <if test="influencerYn != null and influencerYn != ''">
                AND ua.influencer_yn = #{influencerYn}
            </if>
            <!-- 가입상태 필터링 -->
            <if test="userStatus != null and userStatus != ''">
                AND u.user_status = #{userStatus}
            </if>
        </where>
        ORDER BY
        ua.influencer_yn DESC  <!-- 기본 정렬: 인기 회원 여부 순 Y -> N -->

        <!-- 추가 정렬 조건 -->
        <choose>
            <!-- 등급 순 정렬 -->
            <when test="orderBy == 'gradeDESC'">
                , ua.activity_point DESC
            </when>
            <when test="orderBy == 'gradeASC'">
                , ua.activity_point ASC
            </when>

            <!-- 닉네임 순 정렬 -->
            <when test="orderBy == 'nicknameASC'">
                , u.user_nickname ASC
            </when>
            <when test="orderBy == 'nicknameDESC'">
                , u.user_nickname DESC
            </when>

            <when test="orderBy == 'regDateDESC'">
                , u.user_reg_date DESC
            </when>
            <when test="orderBy == 'regDateASC'">
                , u.user_reg_date ASC
            </when>
        </choose>
        LIMIT #{size} OFFSET #{offset}  <!-- 페이징을 위한 코드 -->
    </select>

    <!-- 회원 전체조회 총 회원수 -->
    <select id="getTotalUserCount" resultType="long">
        SELECT COUNT(*)
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        <where>
            u.user_auth = 'user'

            <if test="socialYn != null and socialYn != ''">
                AND u.user_social_yn = #{socialYn}
                <if test="socialYn != null and socialYn != '' and socialYn == 'Y'">
                    AND u.user_social_site = #{socialSite}
                </if>
            </if>
            <if test="businessVerifiedYn != null and businessVerifiedYn != ''">
                AND u.business_verified_yn = #{businessVerifiedYn}
            </if>
            <if test="influencerYn != null and influencerYn != ''">
                AND ua.influencer_yn = #{influencerYn}
            </if>
            <if test="userStatus != null and userStatus != ''">
                AND u.user_status = #{userStatus}
            </if>
        </where>
    </select>

    <!-- 회원 검색 : 관리자, 회원 / 화면에서 보여줄 정보를 나눌 것임 -->
    <select id="searchUserInfo" resultMap="UsersResultMap">
        SELECT u.user_seq
             , u.user_email
             , u.user_nickname
             , u.user_social_yn
             , u.user_social_site
             , u.business_verified_yn
             , CASE
            <![CDATA[
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN 'Y'
               ELSE 'N'
                END AS penalty_yn
             , CASE
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN p.penalty_start_date
               ELSE NULL
                END AS penalty_start_date
             , CASE
               WHEN u.penalty_yn = 'Y'
                AND p.penalty_start_date <= NOW()
                AND p.penalty_end_date >= NOW()
               THEN p.penalty_end_date
               ELSE NULL
             ]]>
                END AS penalty_end_date
            , u.user_status
            , u.user_auth
            , u.user_reg_date
            , u.user_delete_date
            , ua.activity_point
            , al.active_level_name
            , al.active_level_standard
            , ua.influencer_yn
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        <where>
            <!-- 관리자 계정 제외 -->
            u.user_auth = 'user'

            <!-- 검색 조건 추가 -->
            <if test="searchWord != null and searchWord != ''">
                <choose>
                    <!-- 관리자는 이메일 또는 닉네임 검색 가능 -->
                    <when test="userAuth == 'admin'">
                        <choose>
                            <!-- 이메일로 검색 -->
                            <when test="searchType == 'email'">
                                AND u.user_email LIKE CONCAT('%', #{searchWord}, '%')
                            </when>
                            <!-- 닉네임으로 검색 -->
                            <when test="searchType == 'nickname'">
                                AND u.user_nickname LIKE CONCAT('%', #{searchWord}, '%')
                            </when>
                        </choose>
                    </when>

                    <!-- 일반 사용자는 닉네임으로만 검색 가능 -->
                    <when test="userAuth == 'user'">
                        AND u.user_nickname LIKE CONCAT('%', #{searchWord}, '%')
                    </when>
                </choose>
            </if>

            <if test="userAuth == 'user'">
                AND u.user_status = 'active'  <!-- 일반 사용자일 때는 탈퇴 회원 제외 -->
            </if>
            <if test="userAuth == 'admin'">
                <!-- 관리자일 때만 탈퇴 회원도 조회, 필터링은 관리자만 가능 -->
                <!-- 소셜회원 여부 필터링 -->
                <if test="socialYn != null and socialYn != '' and socialYn == 'Y'">
                    AND u.user_social_yn = #{socialYn}
                    <!-- 소셜회원인 경우에는 socialSite 보이게 조건 추가 -->
                    <if test="socialSite != null and socialSite != ''">
                        AND u.user_social_site = #{socialSite}
                    </if>
                </if>
                <!-- 사업자 인증여부 필터링 -->
                <if test="businessVerifiedYn != null and businessVerifiedYn != ''">
                    AND u.business_verified_yn = #{businessVerifiedYn}
                </if>
                <!-- 인기회원 여부 필터링 -->
                <if test="influencerYn != null and influencerYn != ''">
                    AND ua.influencer_yn = #{influencerYn}
                </if>
                <!-- 가입상태 필터링 -->
                <if test="userStatus != null and userStatus != ''">
                    AND u.user_status = #{userStatus}
                </if>
            </if>
        </where>
        ORDER BY
        ua.influencer_yn DESC  <!-- 기본 정렬: 인기 회원 여부 순 Y -> N -->

        <!-- 추가 정렬 조건 -->
        <choose>
            <!-- 등급 순 정렬 -->
            <when test="orderBy == 'gradeDESC'">
                , ua.activity_point DESC
            </when>
            <when test="orderBy == 'gradeASC'">
                , ua.activity_point ASC
            </when>

            <!-- 닉네임 순 정렬 -->
            <when test="orderBy == 'nicknameASC'">
                , u.user_nickname ASC
            </when>
            <when test="orderBy == 'nicknameDESC'">
                , u.user_nickname DESC
            </when>

            <!-- 관리자만 가입일 순 정렬 가능 -->
            <when test="userAuth == 'admin' and orderBy == 'regDateDESC'">
                , u.user_reg_date DESC
            </when>
            <when test="userAuth == 'admin' and orderBy == 'regDateASC'">
                , u.user_reg_date ASC
            </when>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 회원 검색 결과 회원 수 -->
    <select id="getSearchUserCount" resultType="long">
        SELECT COUNT(*)
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        <where>
            <!-- 관리자 계정 제외 -->
            u.user_auth = 'user'

            <!-- 검색 조건 추가 -->
            <if test="searchWord != null and searchWord != ''">
                <choose>
                    <!-- 관리자는 이메일 또는 닉네임 검색 가능 -->
                    <when test="userAuth == 'admin'">
                        <choose>
                            <!-- 이메일로 검색 -->
                            <when test="searchType == 'email'">
                                AND u.user_email LIKE CONCAT('%', #{searchWord}, '%')
                            </when>
                            <!-- 닉네임으로 검색 -->
                            <when test="searchType == 'nickname'">
                                AND u.user_nickname LIKE CONCAT('%', #{searchWord}, '%')
                            </when>
                        </choose>
                    </when>

                    <!-- 일반 사용자는 닉네임으로만 검색 가능 -->
                    <when test="userAuth == 'user'">
                        AND u.user_nickname LIKE CONCAT('%', #{searchWord}, '%')
                    </when>
                </choose>
            </if>

            <if test="userAuth == 'user'">
                AND u.user_status = 'active'  <!-- 일반 사용자일 때는 탈퇴 회원 제외 -->
            </if>
            <if test="userAuth == 'admin'">
                <!-- 관리자일 때만 탈퇴 회원도 조회, 필터링은 관리자만 가능 -->
                <!-- 소셜회원 여부 필터링 -->
                <if test="socialYn != null and socialYn != '' and socialYn == 'Y'">
                    AND u.user_social_yn = #{socialYn}
                    <!-- 소셜회원인 경우에는 socialSite 보이게 조건 추가 -->
                    <if test="socialSite != null and socialSite != ''">
                        AND u.user_social_site = #{socialSite}
                    </if>
                </if>
                <!-- 사업자 인증여부 필터링 -->
                <if test="businessVerifiedYn != null and businessVerifiedYn != ''">
                    AND u.business_verified_yn = #{businessVerifiedYn}
                </if>
                <!-- 인기회원 여부 필터링 -->
                <if test="influencerYn != null and influencerYn != ''">
                    AND ua.influencer_yn = #{influencerYn}
                </if>
                <!-- 가입상태 필터링 -->
                <if test="userStatus != null and userStatus != ''">
                    AND u.user_status = #{userStatus}
                </if>
            </if>
        </where>
    </select>

    <!-- 회원 상세조회 : 관리자, 회원(자신의정보) -->
    <select id="getDetailInfoDto" resultMap="UsersDetailResultMap">
        SELECT u.user_seq
             , u.user_email
             , u.user_nickname
             , CASE
                WHEN #{userAuth} = 'user'
                THEN u.user_name
                ELSE NULL
                END AS user_name
             , CASE
                WHEN #{userAuth} = 'user'
                THEN u.user_phone
                ELSE NULL
                END AS user_phone
             , u.user_social_yn
             , u.user_social_site
             , CASE
             <![CDATA[
                    WHEN u.penalty_yn = 'Y'
                     AND p.penalty_start_date <= NOW()
                     AND p.penalty_end_date >= NOW()
                     AND #{userAuth} = 'admin'
                    THEN 'Y'
                    ELSE 'N'
                     END AS penalty_yn
                  , CASE
                    WHEN u.penalty_yn = 'Y'
                     AND p.penalty_start_date <= NOW()
                     AND p.penalty_end_date >= NOW()
                     AND #{userAuth} = 'admin'
                    THEN p.penalty_start_date
                    ELSE NULL
                     END AS penalty_start_date
                  , CASE
                    WHEN u.penalty_yn = 'Y'
                     AND p.penalty_start_date <= NOW()
                     AND p.penalty_end_date >= NOW()
                     AND #{userAuth} = 'admin'
                    THEN p.penalty_end_date
                    ELSE NULL
                  ]]>
             END AS penalty_end_date
             , u.user_auth
             , CASE
                WHEN #{userAuth} = 'admin'
                THEN u.user_status
                ELSE NULL
                END AS user_status
             , CASE
                WHEN #{userAuth} = 'admin'
                THEN u.user_reg_date
                ELSE NULL
                END AS user_reg_date
             , CASE
                WHEN #{userAuth} = 'admin'
                THEN u.user_delete_date
                ELSE NULL
                END AS user_delete_date
             , ua.activity_point
             , al.active_level_name
             , al.active_level_standard
             , ua.influencer_yn
             , u.business_verified_yn
             , bl.business_name
             , bl.business_number
             , bl.business_address
             , bl.business_verification_date
             , bl.business_verification_status
             , (SELECT COUNT(*) FROM lists  WHERE list_user_seq = u.user_seq) AS listCount
             , (SELECT COUNT(*) FROM review WHERE review_user_seq = u.user_seq) AS reviewCount
             , (SELECT COUNT(*) FROM follow WHERE followed_user_seq = u.user_seq) AS followerCount
             , (SELECT COUNT(*) FROM follow WHERE following_user_seq = u.user_seq) AS followingCount
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        LEFT JOIN penalty p ON u.user_seq = p.penalty_user_seq
        LEFT JOIN business_license bl ON bl.user_seq = u.user_seq
       WHERE
             u.user_seq = #{userSeq}
    </select>

    <!-- 회원 상세조회 : 다른 회원 -->
    <select id="getOtherUserInfoDto" resultType="com.matzip.matzipback.users.query.dto.userInfo.OtherUserInfoDto">
        SELECT u.user_seq
        , u.user_nickname
        , ua.activity_point
        , al.active_level_name
        <!--             , al.active_level_standard-->
        , ua.influencer_yn
        , (SELECT COUNT(*) FROM lists  WHERE list_user_seq = u.user_seq) AS listCount
        , (SELECT COUNT(*) FROM review WHERE review_user_seq = u.user_seq) AS reviewCount
        , (SELECT COUNT(*) FROM follow WHERE followed_user_seq = u.user_seq) AS followerCount
        , (SELECT COUNT(*) FROM follow WHERE following_user_seq = u.user_seq) AS followingCount
        FROM users u
        LEFT JOIN user_activity ua ON u.user_seq = ua.activity_user_seq
        LEFT JOIN active_level al ON ua.active_level_seq = al.active_level_seq
        WHERE
        u.user_seq = #{userSeq}
    </select>




</mapper>